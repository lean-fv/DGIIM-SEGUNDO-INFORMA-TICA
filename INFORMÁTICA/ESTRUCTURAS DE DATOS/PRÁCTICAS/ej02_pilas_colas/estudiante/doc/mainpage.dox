/*! \mainpage Main Page

# Introducción

@image html PIlas_y_Colas.png

El objetivo de este proyecto es el manejo de dos estructuras que almacenan enteros y el máximo de todos ellos.

Para ello, se implementará un objeto MaxStack (pila con una cola subyacente) y otro MaxQueue (cola con una pila subyacente).


# Ejecutables

Los ejecutables son pila_max.cpp y cola_max.cpp. Las explicaciones se encuentran en sus respectivas páginas de información.




@authors Antonio Cantillo Molina & Leandro Jorge Fernández Vega

@page MAXSTACK: PILA_MAX

## PILA A PARTIR DE UNA COLA

Programa que comprueba el correcto funcionamiento del objeto MaxStack, mediante el uso de la función pop (extrae un elemento de nuestro objeto MaxStack) y
push (añade elemento al objeto).

> pila_max \<entero> \<.\>
@param <entero> Entero introducido en el objeto.
@param <.> Carácter que indica una extracción del elemento del objeto correspondiente según los principios de las pilas.

Por ejemplo, si la entrada fuera "1 2 1 3 2 4 . . . . . .", el funcionamiento debería ser el siguiente:

Introduce el primer elemento y le asigna el máximo, que al ser el único elemento en nuestra pila, será él mismo: "1|1"

A continuación, introducimos el siguiente elemento (2) y procedemos a comprobar si hay por debajo de él algún
elemento que sea mayor. Si encontramos un elemento de mayor valor, le asignamos dicho valor al campo "máximo" del
valor 2. En caso contrario, siginificará que el 2 es el mayor de todos los valores almacenados previamente, y
por tanto, el valor quedaría almacenado como: "2|2".

Seguimos añadiendo el resto de valores y siguiendo la misma mecánica utilizando los correspondientes métodos
ya definidos (push y pop), tal y como vemos en la siguiente imagen:

@image html MaxStack.png

En caso de encontrar un punto, se muestra el valor situado en el top de nuestra pila, y se elimina el mismo.


@page MAXQUEUE: COLA_MAX

## COLA A PARTIR DE UNA PILA

Programa que comprueba el correcto funcionamiento del objeto MaxQueue, mediante el uso de la función pop (extrae un elemento de nuestro objeto MaxQueue) y
push (añade elemento al objeto).

> pila_max \<entero> \<.\>
@param <entero> Entero introducido en el objeto.
@param <.> Carácter que indica una extracción del elemento del objeto correspondiente según los principios de las colas.

Su funcionamiento lo explicaremos utilizando un ejemplo de entrada al programa ("1 2 3 4 . . . ."):

Introduce el primer elemento y le asigna el máximo, que al ser el único elemento en nuestra cola, será él mismo: "1|1"

A continuación, introducimos el siguiente elemento (2) y procedemos a comprobar si de entre todos los elementos
previamente guardados en nuestra cola hay alguno que sea mayor que el elemento a introducir. Si encontramos un
elemento de mayor valor, le asignamos dicho valor al campo "máximo" del valor 2. En caso contrario, siginificará
que el 2 es el mayor de todos los valores almacenados, y por tanto, el valor quedaría almacenado como: "2|2".

Seguimos añadiendo el resto de valores y siguiendo la misma mecánica utilizando los correspondientes métodos
ya definidos (push y pop).

@image html MaxQueue.png

En caso de encontrar un punto, se muestra el valor situado en el front de nuestra cola, y se elimina el mismo.

*/